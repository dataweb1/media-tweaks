<?php

namespace Drupal\file_rename_tweaks\Form;

use Drupal\Core\Ajax\AjaxResponse;
use Drupal\Core\Ajax\CloseDialogCommand;
use Drupal\Core\Ajax\HtmlCommand;
use Drupal\Core\Ajax\MessageCommand;
use Drupal\Core\Ajax\PrependCommand;
use Drupal\Core\Ajax\RemoveCommand;
use Drupal\Core\Form\FormStateInterface;
use Drupal\file_rename\Form\FileRenameForm;

/**
 * The form to rename a file.
 *
 * @property \Drupal\file\Entity\File $entity
 */
class TweakedFileRenameForm extends FileRenameForm {

  public function buildForm(array $form, FormStateInterface $form_state) {
    $form = parent::buildForm($form, $form_state); // TODO: Change the autogenerated stub

    // Usages and prompt are not useful to me.
    unset($form['usages']);
    unset($form['prompt']);

    $form['#prefix'] = '<div id="file_rename_from_wrapper">';
    $form['#suffx'] = '</div>';

    // AJAXify submit button.
    $form['actions']['submit']['#weight'] = 10;
    $form['actions']['submit']['#ajax'] = [
      'callback' => [
        $this, '_afterFileRename'
      ],
    ];

    $form['actions']['cancel'] = [
      '#type' => 'submit',
      '#value' => $this->t('Cancel'),
      '#weight' => 11,
      '#ajax' => [
        'callback' => [
          $this, '_cancelFileRename'
        ],
      ]
    ];

    $form['new_filename']['#prefix'] = '<div class="new-filename-wrapper">';
    $form['new_filename']['#suffix'] = '</div>';

    return $form;
  }

  public function save(array $form, FormStateInterface $form_state) {
    $status = parent::save($form, $form_state);

    foreach(['field_media_image', 'field_media_document'] as $property) {
      // Update media name.
      /** @var \Drupal\file\Entity\File $file */
      $file = $this->entity;
      // Array of Medias witch contains your file.
      $media = $this->entityTypeManager
        ->getStorage('media')
        ->loadByProperties([$property => $this->entity->id()]);

      if (!empty($media)) {
        /** @var \Drupal\media\Entity\Media $media */
        $media = reset($media);
        $media->setName($file->getFilename());
        $media->save();

        return $status;
      }
    }
  }

  /**
   * AJAX callback after File Rename.
   * @param array $form
   * @param \Drupal\Core\Form\FormStateInterface $formState
   *
   * @return \Drupal\Core\Ajax\AjaxResponse
   */
  function _afterFileRename(array $form, FormStateInterface &$formState): AjaxResponse {
    $response = new AjaxResponse();

    $messages = \Drupal::messenger()->all();
    if (!isset($messages['error'])) {
      $response->addCommand(new CloseDialogCommand('.entityfilerename-form-dialog .ui-dialog-content'));
      $response->addCommand(new MessageCommand($messages['status'][0], NULL, ['type' => 'status']));
      \Drupal::messenger()->deleteAll();
    }
    else {
      /** @var \Drupal\Core\Render\RendererInterface $renderer */
      $renderer = \Drupal::service('renderer');

      /** @var \Drupal\Core\Extension\ModuleHandler $moduleHandler */
      $moduleHandler = \Drupal::service('module_handler');
      if ($moduleHandler->moduleExists('inline_form_errors')) {
        $response->addCommand(new HtmlCommand('#file_rename_from_wrapper', $form));
      }

      $messagesElement = [
        '#type' => 'container',
        '#attributes' => [
          'class' => 'entityfilerename-form--messages',
        ],
        'messages' => ['#type' => 'status_messages'],
      ];

      $response->addCommand(new RemoveCommand('.entityfilerename-form-messages'));

      $response->addCommand(new PrependCommand(
        '#file_rename_from_wrapper',
        $renderer->renderRoot($messagesElement)
      ));
    }
    return $response;
  }

  /**
   * AJAX callback on cancel File Rename.
   * @param array $form
   * @param \Drupal\Core\Form\FormStateInterface $formState
   *
   * @return \Drupal\Core\Ajax\AjaxResponse
   */
  function _cancelFileRename(array $form, FormStateInterface &$formState): AjaxResponse {
    $response = new AjaxResponse();
    $response->addCommand(new CloseDialogCommand('.entityfilerename-form-dialog .ui-dialog-content'));
    return $response;
  }

}